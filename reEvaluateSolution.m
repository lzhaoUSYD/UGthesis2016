% For accessing the .mph files after solving, in case of resplining.

function c = reEvaluateSolution(model)

%% Evaluate 3D cut points
% Generated by runSplinesV3
fname = 'spiralSplineNew.txt';

% Generated by runSplines
%     fname = 'cutPoints3D.txt';
%     fname = '10Fibres10Nodes.txt';
%     fname = '3500Fibres10Nodes.txt';
xyz = csvread(fname);
numPoints = size(xyz,1);

x = xyz(:,1);
y = xyz(:,2);
z = xyz(:,3);

CPTag = 'cptNew';

% cpt shouldn't exist because there's no reason to save, but this block is useful when debugging.
% try-catch block as alternative to exist() for dealing with Java API.
try
    model.result.dataset(CPTag);
    % If it exists, do nothing.
    % If it doesn't exist, we get a java error and go to catch.
catch
    % Since it doesn't exist, create it.
    cpt = model.result.dataset.create(CPTag, 'CutPoint3D');
end

% Designate cut points at which to evaluate the model.
model.result.dataset(CPTag).set('pointx',x);
model.result.dataset(CPTag).set('pointy',y);
model.result.dataset(CPTag).set('pointz',z);

% Evaluate the model.
% model.sol('sol1').feature('st1')
% model.sol('sol1').feature('v1').feature('mod1_V')

%     fprintf('Computing solution...\n');
%     tic
%     %     model.sol('sol1').updateSolution()
%     model.sol('sol1').run()
%     toc

fprintf('Evaluating %d 3D cut points in COMSOL...\n',numPoints);

V = mphinterp(model,'V','dataset',CPTag)';
%     pd = mpheval(model,{e1,...,en},...)
c = [xyz,V];
